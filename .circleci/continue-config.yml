version: 2.1

parameters:
  run_all_tests:
    type: boolean
    default: false
  any_lang_changed:
    type: boolean
    default: false
  run_lang_ar_tests:
    type: boolean
    default: false
  run_lang_ast_tests:
    type: boolean
    default: false
  run_lang_be_tests:
    type: boolean
    default: false
  run_lang_de_tests:
    type: boolean
    default: false
  run_lang_en_tests:
    type: boolean
    default: false

commands:
  get_code_and_cache:
    description: Get files and cache
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run: mvn install -DskipTests
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
  # Run tests
  run-tests:
    description: run tests
    parameters:
      projects:
        type: string
    steps:
      - run: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      - run: mvn --projects <<parameters.projects>> clean test
executors:
  docker-openjdk8:
    docker:
      - image: circleci/openjdk:8-jdk
#Check parameters and start jobs
workflows:
  test-all:
    when: << pipeline.parameters.run_all_tests >>
    jobs:
      - get-files-job
      - test-all-job:
          requires:
            - get-files-job
  test-languages:
    when: << pipeline.parameters.any_lang_changed >> #und nicht alle
    jobs:
      - get-files-job
      - test-languages-job:
          requires:
            - get-files-job
jobs:
  get-files-job:
    executor:
      name: docker-openjdk8
    working_directory: ~/repo
    steps:
      - get_code_and_cache
  test-all-job:
    executor:
      name: docker-openjdk8
    working_directory: ~/repo
    steps:
      - run-tests:
          projects: languagetool-commandline
  test-languages-job:
    executor:
      name: docker-openjdk8
    working_directory: ~/repo
    steps:
      - when:
          condition: << pipeline.parameters.run_lang_de_tests >>
          steps:
            - run-test:
                projects: languagetool-language-modules/de
      - when:
          condition: << pipeline.parameters.run_lang_en_tests >>
          steps:
            - run-test:
                projects: languagetool-language-modules/en
#  test-lang-ar-job:
#    executor:
#      name: docker-openjdk8
#    working_directory: ~/repo
#    steps:
#      - run-tests:
#          projects: languagetool-language-modules/ar
  #German
#  test-lang-de-job:
#    executor:
#      name: docker-openjdk8
#    working_directory: ~/repo
#    steps:
##      - run-tests:
#          projects: languagetool-language-modules/de
  #English
#  test-lang-en-job:
#    executor:
#      name: docker-openjdk8
#    working_directory: ~/repo
#    steps:
#      - run-tests:
 #         projects: languagetool-language-modules/en
